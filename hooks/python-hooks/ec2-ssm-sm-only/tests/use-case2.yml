AWSTemplateFormatVersion: "2010-09-09"
Description: Tests ::EC2::EnforceSsmHook against manual SSM Session Manager permissions, no encryption
Parameters:
  SimulateFailure:
    Description: Select 'True' to simulate a failure scenario that should be caught by the hook
    Type: String
    AllowedValues:
      - True
      - False
    Default: False

Conditions:
  WantsFailure: !Equals [!Ref SimulateFailure, True]
Resources:

  SsmKmsKey:
    Type: AWS::KMS::Key
    Properties:
       Description: "KMS Key for SSM Session Manager Encryption"
       Enabled: true
       KeyPolicy:
        Version: 2012-10-17
        Id: auto-ssm-1
        Statement:
          - Sid: Allow access through SSM for all principals in the account that are
              authorized to use SSM
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - kms:*
            Resource: "*"
            Condition:
              StringEquals:
                kms:CallerAccount: "094559051528"
                kms:ViaService: ssm.us-west-2.amazonaws.com
          - Sid: Allow direct access to key metadata to the account
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::094559051528:root
            Action:
              - kms:*
            Resource: "*"

  MyInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Amazon EC2 Role to enable AWS Systems Manager service core functionality.
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /   
      Policies:
        - PolicyName: SSMSessionManagerPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssmmessages:CreateControlChannel
                  - ssmmessages:CreateDataChannel
                  - !If [WantsFailure, !Ref AWS::NoValue, ssmmessages:OpenControlChannel]
                  - ssmmessages:OpenDataChannel
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetEncryptionConfiguration
                Resource: "*"
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: !GetAtt SsmKmsKey.Arn

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: 
        - !Ref MyInstanceRole
        
    
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: ami-0c2d06d50ce30b442
      InstanceType: t3.large
      IamInstanceProfile: !Ref MyInstanceProfile

